<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AwD/+cMA///hAP//8AD///AA///4AP///AA=
</value>
  </data>
</root>